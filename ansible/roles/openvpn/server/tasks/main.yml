---
- name: populate service facts
  service_facts: 

- name: download openvpn install script
  get_url:
    url:  https://git.io/vpn
    dest: ~/openvpn-install.sh


- name: remove stdin-consuming line from openvpn-install.sh
  lineinfile:
    dest: ~/openvpn-install.sh
    line: read -N 999999 -t 0.001
    state: absent

# select the default for everything except protocol (we use TCP) and first client name
- name: install openvpn server
  shell: 
    cmd: |
      printf "\n\n%s\n\n\n%s" 2 controller1 \
      | bash ~/openvpn-install.sh
  when: 
  - "'openvpn-server@server.service' not in services"
  

- name: add client-to-client option to server
  lineinfile:
    dest: /etc/openvpn/server/server.conf
    line: client-to-client

- name: reload openvpn server
  systemd:
    name: openvpn-server@server
    state: restarted
    daemon_reload: true

- name: generate edge controller client certificates (controller1 was already created during install)
  shell:
    cmd: |
      test -e "/root/edgecontroller.ovpn" ||
      printf "%s\n%s\n" 1 "edgecontroller" \
      | bash ~/openvpn-install.sh

- name: generate worker client certificates
  shell:
    cmd: |
      test -e "/root/{{ item }}.ovpn" ||
      printf "%s\n%s\n" 1 "{{ item }}" \
      | bash ~/openvpn-install.sh
  with_items: "{{ groups['invokers'] }}"

- name: copy controller certificate to local
  fetch:
    src: "/root/{{ item }}.ovpn"
    dest: "{{ item }}.ovpn"
    flat: yes
  with_items: "{{ groups['controller'] }}"

- name: copy worker certificates to local
  fetch:
    src: "/root/{{ item }}.ovpn"
    dest: "{{ item }}.ovpn"
    flat: yes
  with_items: "{{ groups['invokers'] }}"
